,isbn,user_link,ranking,review
0,0316491977,http://goodreads.com/user/show/2438767-paul-ivanov,5,"I can't believe this is not required reading for a computer architecture course! In my high school Biology, H.G. Wells' The Time Machine was assigned to be read over the winter vacation. It was a bit of a stretch, but did make the class a bit more interesting. As I read Kidder describe the toil undertaken in creating this new computer - working under the pressure on the brink of insanity to find those incessant bugs - I thought this the perfect companion for the CS154B Computer Architecture class at UC Davis. As students, we worked on analogous type of problems and under similar conditions: this book provides a human angle to that struggle. If I recall correctly, pipelining is explained so well, I bet my grandma would even understand it! And yet there are plenty of subtle technical details buried in this masterfully written true story."
1,0316491977,http://goodreads.com/user/show/10770371-dan,5,"West would sit at his desk and stare for hours at the team’s drawings of the hardware, playing his own mind games with the results of the other engineers’ mind games. Will this work? How much will this cost? Once, someone brought a crying baby past his door, and afterward it took him an hour to retrace his steps through the circuit design he had been pondering. Laughter outside often had the same effect, once in a while it made his hands shake with rage — especially if he didn’t like the design he’d been staring at. West usually drove out of Westborough fast after work. “I can’t talk about the machine,” he said one evening, bent forward over the steering wheel. “I’ve gotta keep life and computers separate, or else I’m gonna go mad.”In 1981 Tracy Kidder penned this non-fiction narrative and won the Pulitzer Prize. The story is about a group of engineers, who work for Data General outside Boston, as they spend a year designing a better mini-computer.You probably haven’t heard of Data General because they never got as big as IBM, Cray, NEC and Data General missed the personal computing revolution that unfolded in the immediate years after this book was published. This is not a dramatic book about overpaid and soul-less individuals at high powered tech companies. Nor is it a book about visionaries like Bill Gates or Steve Jobs. No this book is quite literally about a group of a dozen engineers led by their veteran manager Tom West. This group works at the Boston branch of Data General. They are given a year to build a better and faster version of their minicomputer so they can get a leg up on their rival DEC and DEC’s newly released VAX minicomputer. The team is to employ some secrecy initially and not to let a parallel team at the headquarters in North Carolina know what they are working on. In part because they were already told their project is redundant.Although the topic may seem mundane to some, Kidder’s storytelling and narrative is genuine, well paced and compelling in the human sense. The author was embedded in the group so we get a linear narrative and first hand observations on the quest to build a new computer in twelve months. We also get to know the people and their personalities. As far as nerd-fare there is a bit related to circuit design but not enough to spoil the story. Maybe a few mentions of NAND gates and a good deal of discussion on related computer components. I would say one does not have to be tech savvy to love the book but a curiosity about how organizations work and what motivates scientists and engineers is necessary.5 stars. Excellent read. Although the industry around mini-computers died decades ago, this narrative is arguably the best literary style writing on tech that I have read in years. I am adding several other Tracy Kidder books to my to-read shelf. The story is four decades old, but this should be required reading for anyone in the tech industry."
2,0316491977,http://goodreads.com/user/show/16829500-dawn-lennon,4,"As a shameless Tracy Kidder fan, I found this book quite extraordinary. Written in 1981, it chronicles the building of a 32-bit microcomputer at Data General. This was a time when the competitive environment for computer advancement was heating up to a furious pace. Today, these times read like ancient history, exceptt for the fact that it was the dawning of an age.Tracy Kidder, a journalist, not a computer engineer, took on the task of capturing the new computer building process when it was part science, part art, and to some extent part magic. His Pulitzer Prize winning book puts lightning in a bottle. What we see is what builder-engineering is about, how the lure of building a new machine becomes a drug, how the challenge of problems (design, debugging)take over the engineer's life, and how managers must manage with both a strong hand and a loose grip simultaneously.The mental and emotional stress that becomes the engineer's life, the almost fraternity-like antics that take place to lessen that stress, and the demands of producing a functioning and profitable machine dominate the realities described in the book. We read about the vision for the new machine, the challenges of getting upper management to fund what they don't think can be done, the excruciating deadlines that must be met, the overwhelming frustrations during break-fix times, and the idiosyncrasies of the players. I was left in awe of the process, both technical and managerial, and inspired by the creative spirit of professionals who are willing to invest their souls into their creations, no matter what."
3,0316491977,http://goodreads.com/user/show/1103368-ben-haley,5,"The Soul of A New Machine is an engineers soap opera following a rag-tag team of neophytes driven by their own Captain Ahab to build a revolutionary 32-bit computer for the now-defunct Data General in the late 1970s. Tracey Kiddler, the author, was given a rare opportunity as a journalist to follow the team's progress from within and his story shows an insiders knowledge. He breaks down the complex technical nature of the task through a series of straightforward analogies and by doing so enables us to follow the human struggle of these mistreated engineers, who, driven by manipulation and pride work mad hours with little benefit to themselves to breathe life into a machine of their very own. But we are not made to feel bad for the men who sacrifice 2 years of their lives to this white-whale. Instead we come to realize the insane genius and compassion of their caption, Tom West, who has sheltered them from the menacing bureaucracy that surrounds them and given them a sense of purpose and ownership, an opportunity not often bestowed on fresh out of school college grads. Together they band together, go to war, and ultimately emerge bloody, beat-up, and victorious.Important Lessons:	1. Important projects are easy to recruit for.	2. Work runs on peer pressure.	3. Everyone wants to feel an ownership of their project."
4,0316491977,http://goodreads.com/user/show/12495146-john-b,4,"In the early 1980's when this book was first published, the author had to communicate the complexity and labors experienced by a group of engineers as they developed the next big thing for a second rate company. Most of those who read this book today have a level of computer literacy that may be beyond what the author's computer literacy was when he wrote the book. Consequently there are sections where the author takes great care to convey computer concepts and operations to a reader who has never seen a computer. The modern reader might find such sections quaint or boring, while a few others, who had lived through those times will find the detail and care a nostalgic visit to past lives. Bear with the author as he describes the ins and outs of Adventure and intricacies of machines that have become dinosaurs in the pantheon of technology.As so many other reviewers have mentioned, the highlight of the book is the team and interpersonal dynamics--human drama that can be found in pressure cooker development environments today. This portion of the book is as relevant and insightful as it was in 1981.The one message that has stuck with me several weeks after having read the book is ""Pinball is what counted"". The rule of pinball is that if you win, you get to play again. ""You win one game, you get to play another."" Playing the game is a powerful motivator for a select few individuals. Many readers may find it difficult to understand why the team took on such a challenge, but there are a few who will recognize the thrill of pinball and understand the siren song of working in difficult environments on challenges that might be near impossible to achieve. "
5,0316491977,http://goodreads.com/user/show/6593701-josh-davis,5,"This is the 2nd time I've read this book and it took on a new meaning after being part of a huge AWS product launch. The feeling of camaraderie, pride, and purpose was something that I had just recently experienced which made me relate to the engineers and managers in a different way.I loved it the first time I read it but somehow was able to love it more. At the time I didn't understand the historical context accurately. I've recently been reading about the timeline of computers which was a big help. Knowing this was in the late 70s is important because this was the rise of the personal computer and the slow death of the minicomputer.I think it is easy to overlook this book and not understand it for what it was at the time. Computers were still foreign and not many people owned them. They were in lots of workplaces but not everyone had access to them.This book won a Pulitzer which was surprising to me before I had read it. It was hard to believe a book about a bunch of nerds building a computer would win the prestigious award but you quickly understand how it did this after the preface of the book. Kidder starts the story by introducing the main character, Tom West, an enigmatic man on a boat off the East Coast with a group of strangers as they sail the sea. It expertly foreshadows West's character and his role as the general manager of the computer the book documents. Without ever mentioning a computer you start to wonder if you picked up the wrong book.I wish another company would open its doors to a skilled storyteller like Kidder. Chronicling a software startup or the creation of a large service at a big company in the same way would be a riveting read given the advancement of tech.I really recommend this book and consider it one of my favorites. Kidder is an expert at his craft and seamlessly blends the team's stories into the story of the company, Data General, and that into the overarching story of the industry."
6,0316491977,http://goodreads.com/user/show/3452722-koen-crolla,2,"Books written by journalists in general and non-fiction Pulitzer winners in particular are—in my experience—universally garbage, but this was a specific recommendation, so I thought I'd give it a try. I shouldn't have.The Soul of a New Machine describes the development process of Data General's Eclipse MV/8000, but Kidder has no particular insight into the industry or any specific aspect of hardware development. Like most journalists, he does have a tremendous capacity for taking deeply shitty people at their word when it comes to their deeply shitty practices, though.†He was obviously handed a large amount of technical information, and while he should be commended for not just cutting it out (even if his attempts to make it accessible are of dubious value), none of it adds anything to the narrative.The reason this book was recommended to me was because the person who recommended it believes it gives a great impression of what this kind of deadline-bound creative development is (and, implicitly, should be) like, not just in hardware design, but in every sector that makes new things.If that is true for you (it hasn't been for me), I can only feel sorry for you. Don't put up with that kind of bullshit, and definitely don't celebrate it. What the book describes is semi-voluntary slavery, and even Kidder recognises it as a recipe for an early burn-out.--------† Data General, as you may not remember, was notorious for its generally unpleasant business practices (towards its competitors, clients, and employees alike), and ultimately accomplished nothing of any lasting consequence before finally disappearing into EMC."
7,0316491977,http://goodreads.com/user/show/6020795-jim,4,"It is a testament to Tracy Kidder's skills as a writer that I found a book of ancient computer engineering to be a compelling read. The story of Data General's development of a 32-bit minicomputer was somehow rendered like an adventure story through a wild landscape filled with thrills and dangers and eventual reward.I read this book as background reading for a trilogy of books I'm reviewing and so pleasant to find such enjoyment in my research.Oh, and the book also won the Pulitzer Prize..."
8,0316491977,http://goodreads.com/user/show/6968193-jake,5,"“A feeling of accomplishment” is what Veres says he has. “But then again, there’s lots more feeling of accomplishment to go.”The underlying theme of this book, if there is one, would seem to me to be the general feeling that your work needs to have meaning to you. This is a view, in a variety of ways, that most of the engineers seem to hold at this company. The company being Data General, a company I had never heard of, but apparently was quite a big deal in the late 70's and early 80's. In my own experiences I consistently hear engineers tell me they want a job which allows them to do what they want, which isn't working. My view and a view that seems to be held at everyone at Data General in the early 80's is that's bullshit. I decided to studying computer science and computer engineering because five years ago I was afraid I wouldn't accomplish anything of meaning to the world before I die. As I sit with less than a year before I complete these majors I expect to find meaning and satisfaction from my work, to do that I'm going to have to continue working as hard as I can for as long as I can.The paradox of choice can get in the way of this search for meaning. We're presented with so many choices that we forget that confusion is natural and fear is normal. These men and women in this novel were on a journey to find themselves and they accomplished that by changing their industry. They weren't for money, although much of it would be found by some, they were looking for meaning. That's what matters. You shouldn't spend your life waiting to pass the time, or even worse waiting for some final judgement at the end, the real judgement comes everyday."
9,0316491977,http://goodreads.com/user/show/31060683-j-boo,5,"It's the late 1970s, and minicomputer maker Data General is in trouble. Their machines are getting long in the tooth; programs are bumping up against the memory limit of the 16-bit architecture. Who could've thought that 64 kilobytes of RAM wouldn't be enough? In desperation, a team in North Carolina was tasked with building a modern, 32-bit machine capable of addressing up to 4GB. In revenge, the passed-over team in Massachusetts decided they would build another 32-bit machine, on simpler lines, and show up the Carolinians.Both in desperation and Massachusetts was Tracy Kidder, a hopeful author whose first book had stunk. ""How about computers?"" suggested his editor. So Kidder called up his old roommate, who by luck was starting up Team Revenge, and embedded himself in that project.I had the good fortune to be in the computer field during the crazed internet boom, and have done my time in startups. It was exciting, interesting, strange, and awfully similar to what Kidder described decades ago. ""The Soul of the New Machine"" is that of the engineers, who poured themselves into it day after day, late hour by late hour.Kidder won a well-deserved Pulitzer prize for this. If you're interested in the sort of people and environment surrounding the bleeding edge of the computer industry, you should give it a shot.Wired has an appreciation/where-they-are-now (or were) for the main players here: https://www.wired.com/2000/12/soul/and a one for the others here: https://www.wired.com/2000/12/eagleteam/"
10,0316491977,http://goodreads.com/user/show/145381-brian,4,"(4.0) Snapshot in time in the history of computingRetells the story of the development of the first 32-bit minicomputer offering from Data General (I'm not nerdy/old enough to really know about them). Much of it centers on the defiant attitude that the engineers took to build this computer even when it appeared that Data General was doing its best not to make it happen (relatively low pay, few resources, few engineers, crazy deadline). But they do (only about 50% over schedule), through allnighters, double-shifts, worked weekends and a heck of a good bunch of engineers.Kidder delves into some of the technical problems and solutions they encountered, which were interesting. But the most interesting thing for me was that this was right around the time that marked the end of the ability for a single engineer to really know the entire CPU...they're getting into the territory where there just need to be some black boxes that you know about but know little of in order to get everything to work together.One other interesting section is towards the end when Kidder tries to debunk the notion of a ""computer revolution"". Just ten years later, he could probably see that he was just witnessing the very beginning of a series of revolutions.Well written, interesting, I'll probably try another Tracy Kidder sometime soon. Anyone have a strong recommendation?"
11,0316491977,http://goodreads.com/user/show/10906080-brendan-brohan,4,"Hard to believe that it's coming up for 35 years since the events in this book took place. It was a different time. A time when the frontiers in computer hardware were open and worth fighting for; when margins in hardware were, by present day standards, stratospheric, and when computer professionals/nerds/geeks were cheap and in it for the challenge. This is the true story of a small team of people with a common goal - to give birth to a new computer that will save a company. The different characters in the book have different perspectives, different drivers, but they all gave a part of themselves to see their baby born. The baby was the 32-bit Eclipse, (the now defunct) Data General's chance to survive a few more years in the nascent mini/micro computer industry. While the book has sufficient technical information to keep the casual geek interested, the real story is about the engineers working 100 hour weeks and how this project became a big part of their lives. Kidder has created a classic of the mini-computer era that has no equal."
12,0316491977,http://goodreads.com/user/show/71117759-murilo-queiroz,4,"It's surprising how a book from 1981 about a team of engineers developing a new computer (a competitor to the DEC VAX) is still very relevant and entertaining. Obviously the technical details reflect the technology of the 1970s (the features of the new machines - a 32-bit architecture with protection rings and support to threads are very common today), but what gave a Pulitzer Prize to this book is the description of the people involved in the development process, what motivated them and how is the life in the engineering department of a hardware company. If Hackers: Heroes of the Computer Revolution tells the early computers history from the academic, hobbyist and domestic point-of-view, The Soul of a New Machine chronicles the other side, the commercial/industry perspective. And it's easy to perceive, common and central to both books, the ""Hacker Ethics"", the desire of solving new and interesting problems and develop new machines - something that persists to this day."
13,0316491977,http://goodreads.com/user/show/1660832-kevin,4,Terrific look at a piece of computer history written at the time it was actually happening. I'd just read Tracey Kidder's book about writing and as a fan of computer history thought this would be a good read. It was as a team puts together Data Generals first 32 bit minicomputer. I'd recommend this book to anyone that enjoys computer history. Well written and fast paced.
14,0316491977,http://goodreads.com/user/show/69172496-christopher,5,"This book spoke to me right from the intro.""[The book's title implies] something about the collective character and effort of a group of people who worked only party for their pay, most of them reveling in the difficulty of their circumstances and the complexity of their task, to create something that they knew was transitory. As Camus said of Sisyphus, one must imagine them happy."""
15,0316491977,http://goodreads.com/user/show/2002695-alexander-case,4,"About 6 years ago, a sort of scandal rocked the gaming industry related to a blog post by a woman known as ""EASpouse"". The blog post criticized EA's labor practices at the time, which required employees to work massive amounts of unpaid overtime, as they were salaried employees. By massive, I mean about 12-16 hour days, 6 days a week, regularly. This was a big deal among gamers, because very few of us had ever had the opportunity to peek behind the curtain like this. It was likely that most of us viewed game development with a variation of the way that Roald Dahl as a child imagined the inside of the Cadbury Chocolate Factory near the boarding school he attended (which later led to Charlie & the Chocolate Factory).The Soul of a New Machine, by Tracy Kidder shows that such working conditions are nothing new. The book follows the development process of Data General's micro-computer (sort of like a rack mounted server, except it's the size of the whole unit, but essentially only being one of the server nodes), that would be a successor to their Eclipse line of microcomputers, code named the Eagle, and later released as the MV/8000. The book goes into both the personal and technical aspects of the development process, profiling the various men (and a few women) involved in the project, and giving a description of the technical aspects of the process for the layman.While the technical bits (pardon the pun), are enjoyable, the book's strength, and where it spends most of its time, is in profiles of the people. The book paints a bleak picture of the inner workings of Data General. The working conditions at Data General, particularly on this project, are brutal. Much as with EA Spouse, employees are salaried, with no overtime pay, and work 12-16 hour days, 6 days a week. As the project goes on, project leads and younger employees are worn down. Often, employees at Data General observe that the company brings in a lot of new fresh recruits, and few stay at the company after they turn 30. Many of these new recruits drop out for various reasons, and often employees discuss the company's sweat-shop like working conditions. As the project moves into the heat of summer, the air conditioning breaks, turning their windowless basement office into a sweltering oven, which they can't even leave the door open for, for security reasons. Only after the employees strike do they fix the air conditioning.By the end of the book, several of the project leads, themselves burned out, leave the company, and while some of the employees on the Eagle team stay on, many more have left.Tracy Kidder got an impressive amount of access at Data General when he wrote this book, and while he's honest and truthful about what happened there, Data General, at least to my 21st century mind, comes out of this book smelling like shit. I base this solely on what Data General does, and I know this because Kidder doesn't whitewash - he thankfully calls it right down the middle.While the book is never accusatory, it makes clear that Data General is a predatory employer. It preys on young, semi-idealistic college Engineering graduates, who don't have a lot of job experience and are looking more for interesting problems to solve, interesting work to do, than a big paycheck. They promise them interesting problems, and briefly, very briefly, warn them that there will be long hours and possibly a limited social life, that this job will become their life. To meet the deadlines required of them they will have to give up friends, family, and the outside world, living only the job, for months or years at a time. Plus, because they're salaried, despite all the hours they get that would be overtime, they're only making their standard pay grade.It chews up 22-24 year old kids, and spits them out at 30, burnouts who had great potential, but were consumed by their jobs. They don't say if many of these former employees stay in the industry, and some certainly do - Ray Ozzie, creator of Lotus Notes and current Chief Software Architect at Microsoft is a Data General veteran. However, those who leave the industry with a sour taste in their mouth will probably leave worse off then they would be if they worked somewhere else. Had they been actually paid overtime, they could have possibly built a nest egg that could have allowed them to retire early, or to at least take their time looking for work elsewhere.While some poor decisions related to processor architecture helped to kill Data General right before the dawn of the 21st century, it is my suspicion that the boom in Silicon Valley may have inspired a brain drain. Nicer weather, a less oppressive corporate culture. For people who wanted more money, there was the change to come in on the ground floor of companies which had the potential to be worth millions and get significant stock options. For those who preferred challenge, they could face whole new challenges when designing new systems and new architectures at the new companies in the Valley.In summary, the book is a high resolution snapshot of the early days of the computer industry, before the internet started to permeate our lives in subtle ways - computerized tax processing, credit cards, ATM machines, and so on, leading up to the more overt ways it would later find its way in - Bulletin Board Services, E-Mail, and finally, proper web pages. People interested in the history of the computer industry will certainly find this fascinating. People who don't care about the history of computing can still find something in the profiles of the people in this project, and how the project's process slowly wears them all down."
16,0316491977,http://goodreads.com/user/show/7226831-josh-friedlander,2,"Portrayal of a high-pressure hardware development project. It's...fine. Most interesting bit is definitely at the end where Kidder muses about the telos of work, and why people might voluntarily give so much of themselves for a project. Ruskin thought that Gothic cathedrals had been built by people who saw meaning in their labour, something industrialisation had taken away from them. The development of this computer was mainly driven by employee enthusiasm, and remote managers relying on the ""mushroom principle"" (leave them in the dark, feed them manure, and watch them grow).Shows the tech industry pretty much as it is today: mostly white/male, a world of affable smart nerds who enjoy what they do and work long hours out of personal interest in their work, not employer pressure. It's basically an anthropological study, written without much technical background (Kidder tries to convey any technical ideas by very simple analogies). He cites John McPhee as his* primary writing influence, and that kind of slow pensive writing might be better suited to writing about the outdoors than corporate IT. *I thought I could add another to my quorum of books by female authors this year, but it turns out that Tracy is just one of those starchy WASP men's names, like Hilary or Lynn."
17,0316491977,http://goodreads.com/user/show/5710916-ana-nogueira,5,"
They were building temples to God. It was the sort of work that gave meaning to life. That's what West and his team of engineers were looking for, I think.
An incredible account of what it feels like to work in the computer industry, an accurate description of computer architecture (that is still relevant today), and an all-around amazing book. Touches many aspects of hardware, management and the emotional intricacies of engineering.On a personal note, to me, it captures the essence of computers and the people who make them. This was a very special read to me as a computer engineering undergraduate - a fantastic accomplishment that someone from a different field of expertise managed to grasp in such a beautiful way the art of the machine and the people working at the forefront of its development. I had a feeling from the first page, that I was going to like this book. It did not disappoint.
""The game of programming - and it is a game - was so fascinating. We'd stay up all night and experience it. It really is like a drug, I think.""
Sounds about right."
18,0316491977,http://goodreads.com/user/show/2008190-drowningmermaid,3,"Single-digits-year-old me really liked the title. So I read it.It's a little hard not to view this work environment as toxic, despite the obvious love the author has for the project. Sadly, a lot of the love for a project like this one became the go-to idea that eventually fueled much that is worst in the tech industry. 70 hour work weeks as the expected norm? Check. In this book we have recent-grads who are exploited for their willingness to try anything-- which has now become using interns as slave labor. The vision of everyone one-day owning a personal computer that they can carry around with them? Check. The myopia of loving work on a great project with no broader understanding or concern for how that technology is going to be used? Check.In this era of big beige clunkers, glowing green type, and rainbow cord-spaghetti were the seeds of the world we know and love. And love to hate."
19,0316491977,http://goodreads.com/user/show/61508420-dani-l,5,"This book was a great read from start to finish. It takes you through the journey that an engineering in the 70s went through to get a machine to market. Tracy Kidder writes it in a way that such a dry subject reads like an epic adventure, describing the engineers with so much detail that they feel like the heroes of said adventure. I think what I personally appreciated the most is that it's also a very good time capsule of the computer industry of the late 70s, showing what has changed, but even more so, how much stayed the same. Further more, it's a very interesting case study in how to manage engineers, seeing how much the team was willing to sacrifice just because they got so much freedom and influence in the work they were doing.I'd say this is a must-read for anyone in the tech industry and a highly recommended read even for those outside of it."
20,0316491977,http://goodreads.com/user/show/5692602-kaushik-iyer,5,"This was a fantastic read. Tracy Kidder captures a period in computing history that I'd only ever vaguely heard about. The race to build (or in this case retrofit) the first 32-bit microcomputers!This a fundamentally human exploration of how to inspire and lead people to tilt at windmills. You see how technical credibility is earned, and how teams come to inhabit a realm of their own as they approach launch.Lots of crazy debugging stories, some fantastic character sketches make a book that is well worth your time."
21,0316491977,http://goodreads.com/user/show/7283807-ben,3,"A very nice story of how a small team of engineers works to create a new computer for Data General in the late 1970s. The computer is not particularly groundbreaking, a new 32-bit computer that is software-compatible with the old 16-bit model. But the story is remarkable for its insights into how the work got done. It explains the characters, their motivations, some technical details (at just the right detail)—and is filled with memorable and realistic anecdotes. It is well paced, well written and well organized, a very nice piece of sociology. "
22,0316491977,http://goodreads.com/user/show/655723-nick-black,5,Fantastic!
23,0316491977,http://goodreads.com/user/show/3749410-aaron-arnold,4,"There are many, many project management books that purport to reveal the ultimate system for surmounting the myriad challenges to releasing a product on-time, in-budget, and with all the promised features. It's a popular and useful genre, even if much of the material is just reshuffled and rebranded old bromides, but sometimes the most helpful and memorable way to offer project management advice is to just pick a single case study and dive in deep to explore the group dynamics that result - or don't - in a successful product. I'd previously read Mountains Beyond Mountains, Kidder's excellent profile of Dr. Paul Farmer, and this much earlier work, which won him a Pulitzer, is just as detailed, thoughtful, and revealing. It's about the race from 1978 to 1980 by one team of computer engineers at Data General to develop and release a 32-bit ""minicomputer"" (one of the many charmingly antiquated terms that will give those who know their industry history a smile) called the Eclipse in competition with another, more-prestigious team that's been given a more glamorous project in a shiny new office, with the fate of the company looming in the background. Heroes and villains are the keys to great drama, and so as the narrative follows the protagonists, who are working on ""Eagle"", a 32-bit extension of the existing 16-bit line of computer hardware instead of the brand-new computer of their dreams that they imagine their counterparts are gleefully assembling, their struggles to design, build, test, debug, and actually finish a computer without more hacks, kludges, and shortcuts than are absolutely unavoidable in such a short time take on a mythic glow that anyone working on a big project in the tech industry under a tight deadline will immediately recognize, despite the passage of nearly 40 years.If I had to pick a single part of the book that best-represents why the book would make a worthy addition to a computer engineering syllabus, it would be the chapter ""The Case of the Missing NAND Gate"". It's an almost self-contained episode towards the end of the book, where, late in the development cycle, several engineers are attempting to debug an erratic logic failure, which occurs just often enough to be indicative of a real problem but not so often as to be easily reproducible. Kidder relays the team's efforts to determine if this diagnostic failure is at root a software or a hardware issue, with an amusing layer of ""antagonistic camaraderie"" on top of their troubleshooting, as all of them had a hand in designing the machine and each wants to solve the problem but none wants to have the root cause bear their fingerprints. This was back in the era when computer design involved the frequent use of oscilloscopes and it was often a genuine question if chips on a board weren't properly spaced for optimal signal timing, so fans of vintage computing will really enjoy as Kidder walks the reader through the finer points of system caches, assembly microcode, page faults, and logic gates while various engineers, working in shifts, propose and reject theories to explain the anomaly. It's a genuine puzzle, and Kidder does a great job explaining just what the problem is and why it's so difficult to diagnose and eventually solve, translating the arcane technical details of the fault with the various components of the system architecture until it's not just lucid but even enthralling. Here's his rendition of one potential explanation from one engineer named Guyer:""The diagnostic program originally puts the target instruction at address 21765, and then, sometime later on, it moves the target instruction to 21766. But the IP never gets word of the change, though the System Cache does. Now, sometime after the target instruction is switched from mailbox 21765 to 21766, the program directs Gollum to execute the instruction at 21766. The IP receives this command and looks through its cache. It says to itself, in effect, 'Mailbox 21766? I've got that address and there's an instruction in it. Let's run it.' But in the I-cache, the target instruction is still at 21765, and mailbox number 21766 contains an error message. In short, the I-cache contains an outdated piece of memory. Why didn't it get updated along with the other parts of the memory system? Maybe, Guyer writes, the System Cache is to blame. The System Cache is supposed to know exactly what is in the I-cache. If an instruction or data gets moved to a new address, the System Cache is supposed to tell the IP to throw away the outdated mailbox and get the new one, the one with the target instruction in it. Somewhere back in the program, Guyer figures, the System Cache lost track of what was in the I-cache. It forgot that the IP had the target instruction in mailbox 21765, and so, when the change was made in the location of the target instruction, it never told the IP to get rid of the old, outdated mailbox. Guyer likes this hypothesis. He records it with mounting enthusiasm; and describing it later, he repossesses the feeling, speaking rapidly, gesturing with both hands. Then he stops, puts his hands on the table, and says, 'Of course, it was completely wrong.'""The book is also notable for broader reasons. Massachusetts was a much larger center of the technology industry in the 1970s and 80s than it is today, and the ""Route 128"" cluster competed directly with Silicon Valley for talent and prestige. However, the Eclipse team's main antagonists were not in California but in North Carolina, giving the modern reader a glimpse of the ""flight to the Sunbelt"" in embryo that has helped the Research Triangle, among other places, at Massachusetts' relative expense. Data General was founded by former employees of Digital Equipment Corporation; I've read articles arguing that Massachusetts' relatively strict enforcement of noncompete agreements was a major force that drove tech firms to less strict jurisdictions, but that doesn't seem to have been as large an issue here as the typical lure of lower taxes. However, prospective MBAs should scrutinize closely the decision by corporate management to have two different teams working on overlapping products, as ultimately the highly-regarded North Carolina team working on the prestigious brand-new 32-bit machine (dubbed ""the Fountainhead Project"", with hilarious irony) was upstaged by the ""Eagle"" team, whose less-ambitious 32-bit extension of the 16-bit Eclipse became a huge moneymaker for the company. Now, hindsight is 20/20, and it's obviously impossible to consistently tell ex ante if internal competition, which is often positive, will in the end have wasted resources. After all, the Eagle team did produce an extremely successful product, although we don't know how much was spent on the Fountainhead team. But lack of clear focus is always risky, and corporate politics can have damaging downstream effects on teams of even very smart people.But any look into the subtleties of nerd psychology has to account for the fact that the drive to create cool technology is often far more powerful than any corporate folly, even and perhaps especially if that involves extremely long hours of hard work. Occasionally the concept of ""mushroom management"" is invoked, which turns out to mean ""put 'em in the dark, feed 'em shit, and watch 'em grow"", and one paradoxical upside of not being the top brass' favorite project is that, with protective leadership, that can actually mean more opportunity to produce. There's an interesting detail in the life story of Tom West, the top manager for the Eagle project: ""He went to Amherst College, in western Massachusetts, where he studied the natural sciences. He did so without academic distinction, and it happened that Amherst was just then embracing a new Calvinist fad called the underachiever program: young men whose brains seemed much better than their grades were expelled for a year, so that they might improve their characters. At Amherst, certainly, and possibly in the entire nation, West became the first officially branded underachiever. It was something he'd always remember."" This story takes place after the end of the naive cyberhippie movement of the Whole Earth Catalog/""All watched over by machines of loving grace"" era, so that technoromance had been firmly replaced by a more modern engineering sensibility, but there's still poignancy of the ceremony at the end of the project, where the team members come to grips with how much of themselves they've put into what would be released as the Data General Eclipse MV/8000, elevates what could have been just an unusually lengthy product diary into an account of creation that justly deserved its Pulitzer. One of the engineers had a typical complaint:""What a way to design a computer! 'There's no grand design,' thinks Rosen. 'People are just reaching out in the dark, touching hands.' Rosen is having some problems with his own piece of the design. He knows he can solve them, if he's just given the time. But the managers keep saying, 'There's no time.' Okay, Sure. It's a rush job. But this is ridiculous. No one seems to be in control; nothing's ever explained. Foul up, however, and the managers come at you from all sides. 'The whole management structure,' said Rosen. 'Anyone in Harvard Business School would have barfed.'""Maybe, but the reason why his project shipped and his rival's didn't wasn't because he had superior consultants from Harvard. As Kidder recounts from attending a trade conference: ""It seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!"""
24,0316491977,http://goodreads.com/user/show/1905272-stephen,4,"Hold on to your hats, kids! We're taking a trip back to the late 70s, where there were more than 2 or 3 types of computer to choose between, but they cost half a million dollars and were the size of refrigerators. This book relates the development of a new computer at Data General, a highly successful manufacturer of the time, though forgotten today. This is really one of those plus ça change, plus c'est la même chose things. While it is so much of its era - maybe the bronze age of the computer industry - so many things have barely changed. Seeing which things are identical and which are unrecognizable is one of the fascinating things about this extremely interesting book.Having worked in the broad field of computing for 15 years, the processes of developing and delivering a technical project were at the same time familiar and alien to me. The speccing, creating, iterating, integrating, debugging are described very convincingly and were very recognizable. But the way those things were achieved - the equipment used, the amount of documentation, the way issues were tracked - was all very different to practices today (and for good reasons at the time). I would have enjoyed a bit more technical detail, but then I imagine that I'm a bit more technically proficient than the target audience. The characters of the engineers, their goals, and the counter-intuitively dysfunctional ways of getting the most out of them is remarkably similar to what one might encounter in the field of computing today (to be honest, I'm only familiar with development on the software side, but I assume the same broadly hold true on the hardware side). This project tended to use much younger engineers than standard in the industry, and motivated them by giving them a high level of responsibility for their particular areas - which meant they felt that they had to work ridiculous hours. This was good for those involved, but also meant that the creation of the machine was much cheaper than it would have been with more experienced people working regular hours (that said, it also came with a higher risk of failure). Additionally, the office politics of a large tech company are well depicted, and should be instantly recognisable to anyone who's ever worked in such an organisation.The story of the creation of the machine has some strong parallels with Revolution in the Valley - about the develpoment of the first Mac (remarkably only about 5 years later). In both, the computer was thought of (at most) secondary importance within the companies building them. And both had a team of highly-motivated, young engineers driving them forward, with ridiculous workloads, and thriving on their ""outsider"" status. Data General's computer was not revolutionary like Apple's, but that is not really what this book is about. It is a fascinating insight into the inner workings of the computer industry - a field which affects all our lives and yet is somewhat opaque. It is remarkable both as a historical account, and also for how relevant it is today."
25,0316491977,http://goodreads.com/user/show/814660-greg,5,"Tracy Kidder put together a wonderfully rich and in-depth look at the inner workings of a team of designers working on a new minicomputer. With scarce resources, minimal corporate support, and little but what they could scrounge and their own intellectual prowess and determination, the team succeeded against all odds. And with Kidder's able help, we are right there with them. We see the manipulations, the generation of fierce commitment in the experienced and newbie alike, and the almost fanatical devotion to cause that was the beginning of a new movement and new expectations for employee commitment. Kidder wondered with some anxiety what it would lead to; with the advantage of more than two and a half decades, we can see the results. "
26,0316491977,http://goodreads.com/user/show/180908-tatiana,4,"I read this back when it was current, and I was programming at the time on a Data General MV6000, so it was really fascinating to me how that series was made. I enjoyed the book immensely, and found it a fun read, a page turner. It was nice that Tracy seemed to learn enough about the whole process, the technology and the project, that he really understood what was going on. I think a lot of journalist types wouldn't have managed that. They would have made a lot of vague statements in their books talking about technical things with not enough detail for you to figure out what they were trying to say, and that would have been maddening. Tracy seems to grasp fully subjects like science, technology, and medicine, so he's wonderful to read on these subjects."
27,0316491977,http://goodreads.com/user/show/5632477-ashley,5,"This book had a very compelling blend of technical content and a focus on the relationships and idiosyncrasies of the computer engineers behind this amazing achievement. As someone with a computer engineering background, I appreciated the detail given around the architecture of components that make up the Eagle and the process by which they are designed. I think Kidder did a great job of explaining these technological intricacies in such a way that non-technological people have a good chance at understanding and appreciating them, as well. It was very inspiring to learn about the work that so many hardware engineers and microcode programmers poured their souls into for no other reason than to be a part of something bigger."
28,0316491977,http://goodreads.com/user/show/4239462-kevin,3,"As someone else commented, paraphrased: ""This should be required reading for any computer architecture course.""A fascinating insight into the work it took to launch an entirely new computer back in the days of hand-soldering and oscilloscopes, as well as a pseudo-biography of the strange and charismatic leader of this particular team, Tom West."
29,0316491977,http://goodreads.com/user/show/29723160-russell-hunter,3,This book talks about the team that creates a new computer. The book is read a lot by MBA students. I can see where putting a team together to do software and hardware is hard work. There are many times when the unexpected comes up and you are late on projects. I thought it was interesting the dynamics of the different teams and how the managers of the teams dealt with people.
30,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
31,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
32,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
33,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
34,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
35,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
36,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
37,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
38,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
39,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
40,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
41,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
42,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
43,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
44,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
45,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
46,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
47,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
48,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
49,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
50,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
51,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
52,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
53,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
54,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
55,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
56,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
57,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
58,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
59,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
60,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
61,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
62,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
63,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
64,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
65,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
66,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
67,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
68,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
69,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
70,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
71,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
72,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
73,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
74,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
75,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
76,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
77,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
78,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
79,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
80,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
81,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
82,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
83,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
84,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
85,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
86,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
87,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
88,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
89,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
90,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
91,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
92,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
93,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
94,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
95,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
96,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
97,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
98,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
99,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
100,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
101,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
102,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
103,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
104,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
105,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
106,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
107,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
108,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
109,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
110,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
111,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
112,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
113,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
114,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
115,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
116,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
117,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
118,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
119,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
120,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
121,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
122,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
123,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
124,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
125,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
126,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
127,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
128,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
129,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
130,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
131,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
132,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
133,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
134,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
135,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
136,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
137,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
138,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
139,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
140,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
141,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
142,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
143,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
144,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
145,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
146,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
147,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
148,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
149,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
150,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
151,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
152,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
153,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
154,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
155,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
156,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
157,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
158,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
159,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
160,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
161,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
162,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
163,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
164,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
165,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
166,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
167,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
168,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
169,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
170,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
171,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
172,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
173,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
174,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
175,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
176,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
177,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
178,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
179,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
180,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
181,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
182,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
183,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
184,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
185,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
186,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
187,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
188,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
189,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
190,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
191,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
192,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
193,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
194,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
195,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
196,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
197,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
198,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
199,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
200,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
201,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
202,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
203,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
204,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
205,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
206,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
207,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
208,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
209,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
210,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
211,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
212,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
213,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
214,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
215,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
216,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
217,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
218,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
219,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
220,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
221,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
222,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
223,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
224,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
225,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
226,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
227,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
228,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
229,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
230,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
231,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
232,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
233,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
234,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
235,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
236,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
237,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
238,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
239,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
240,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
241,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
242,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
243,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
244,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
245,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
246,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
247,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
248,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
249,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
250,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
251,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
252,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
253,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
254,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
255,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
256,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
257,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
258,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
259,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
260,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
261,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
262,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
263,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
264,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
265,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
266,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
267,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
268,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
269,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
270,0316491977,http://goodreads.com/user/show/1413204-ken,5,"I read this many years ago and many books ago. But it made a big impression on my younger self about the quest for something bigger than yourself. You don't do something for money or glory, you do it for the deep internal feeling of accomplishment."
271,0316491977,http://goodreads.com/user/show/35635756-daniel-beattie,4,"I read this book when I was 18 (well over a decade ago) but I remember it being an easy and interesting read, and it gave me an appreciation of just how much work goes into creating something as advanced as a computer machine."
272,0316491977,http://goodreads.com/user/show/4051067-abhishek-kona,2,"A Robert Caro like discerption of how a team of renegade engineers brought a new computer to the market. It was sheer machoism, and perhaps the computer industry was much worse in the infancy.Too long to be a book, though could have been a nice article."
273,0316491977,http://goodreads.com/user/show/15572613-perifian,3,My gut tells me no book has been more deserving of its Pulitzer. 
274,0316491977,http://goodreads.com/user/show/69041363-betawolf,3,"I can see why this book won a Pulitzer. Kidder has a very strong journalistic asset, a style which consciously integrates the 'human element' -- the personal background and philosophies of various project members -- with hard-won analogies that explain the intricacies of his subject matter in a manner that the general public can consume. Whether describing complex internal politics, hardware faults or individual biographies, his text flows cleanly off the page, neither dry nor shallow in his treatment of the subject. There is always a detail presented to hook the attention, a narrative thread to follow, a character to understand. The material was of course also timely (at the time), and no doubt contributed a lot of wider cultural insight into who computer engineers were, and how they worked. The fact that the Eagle was not on the whole a particularly significant machine actually helps here -- if this was a particularly unusual computer, one might wonder if the processes that produced it were also particularly unusual, and less representative of a whole industry.A lot of Kidder's focus is not so much on the technical work and innovation, but on the management and culture surrounding the creation of the machine. The group he describes were essentially thrown into a pressure-cooker of technical work, with a boss who (having created a project against an uncertain background) barely acknowledged them while sheltering them from the rest of the organisation. The work is collaborative, but competitive -- engineers were routinely working incredible unpaid overtime simply to get things done. You feel like a generation of managers read details like this with no small amount of salivation. Skilled labour that self-motivates and under-bills? It was a solid read, but one which failed to strike a chord with me. Elements of the culture described are certainly familiar, but I found nothing romantic or inspiring that built on that familiarity. With 40 years of perspective, the burning-both-ends nature of the work struck me as wasteful. Sometimes I did feel like I was reading a series of miniature biographies about people I wasn't interested in, and how they were brought together to make something even less interesting. Kidder's talent disguises that, but ultimately I can't give this one more than a nod of appreciation."
275,0316491977,http://goodreads.com/user/show/22109807-scott-j-pearson,4,"This work, written about four decades ago, tells the true tale of how a team of computer engineers built a new computer. In an era contemporaneous to Apple Computer’s founding, Data General computers built affordable new computers for the masses. A group of engineers built a new circuit board that eventually pushed itself to the forefront of the market.This book is about engineers and the culture of engineering more than anything else. It’s about smart young men who pour their lives into projects in order to see them succeed. It’s about their lack of social skill, their strange coping mechanisms, and their bonds of brotherhood and friendship. Such displays are familiar to anyone who has spent much time around engineers. In Kidder’s telling, these engineers give this product supreme meaning for a couple years of their life.Kidder’s journalistic act won a Pulitzer Prize. It’s amazing how he transforms mundane engineering practices into a fast-paced drama. His ability to empathize with average engineers (especially as a non-engineer) confounds me. He describes this scene as exciting for the masses when most non-engineers would consider such adventures as boring. This work still interesting to read almost forty years later.So what is the soul of a computer? To Kidder, it’s about working hard on a project to which one has given supreme importance. It’s about a team coming together despite their social hang-ups. It’s about pushing a product out only to have marketers and business-people claim its inventive force as their own. It’s about not just the circuit boards and software but the people who create the computer for us."
276,0316491977,http://goodreads.com/user/show/32091911-sallie-dunn,3,"I hate when I start a review and it gets lost! This is a 3.5 ⭐️ read for me. Don’t get me wrong, the writing is excellent, but the subject matter another story. There isn’t the teensiest bit of engineering ability in my bones; I can barely run the TV remote! I needed to read a book with a pink cover and found this on my shelves where it has sat gathering dust for a very long time. This book is all about the intricacies required of a team to build a minicomputer back in the late ‘70’s. Back when computers were designed for businesses and everyone didn’t own their own laptop and/or iPads. Lots of computer gibberish, arithmetic, algorithms, and acronyms. I did find the team members backgrounds and interaction interesting, though. All in all, the information herein is somewhat dated, and I have another donation for my Good Will pile."
277,0316491977,http://goodreads.com/user/show/57868426-dan,5,"It's hard to explain to a non-engineer what an engineer does, and how it feels to work as an engineer. This book does a wonderful job in that regard, showing how it was like for a group of engineers and their managers in the nascent decades of the computer industry, who took themselves to build a new computer in a rather short time.The book does not belabor much with the technical (only to provide a context), but bears more into the lives and work relationships of the engineers.Readers familiars with startups today may find a lot of parallels between then (1978) and now, perhaps recognizing that while computers got order of magnitude times faster, the teams and people who design computer systems still going through similar processes."
278,0316491977,http://goodreads.com/user/show/5369575-phil-dwyer,4,"Four stars is maybe too many, three too few for this book. At times it's fascinating, but at others it's very turgid. Kidder goes into (I feel) completely unnecessary detail to explain the complexity involved in designing a computer. I have a degree in electronics and a masters in computing. I've used boolean logic to design logic circuits. I've written code in machine code. I've designed an operating system. And even I found these explanations tedious and boring. I get that he was trying to give the reader a sense of the conflict and tension involved in developing a machine. But for me it didn't work.Nevertheless, I persisted because there was enough to keep me reading."
279,0316491977,http://goodreads.com/user/show/75464420-sriram-sundaram,4,"Excellent read. It is the late 70s and DEC already has a new 32 bit mini computer out in the market. Data General is in a race against time to develop one of their own. What follows is an intriguing tale of how a small group of twenty somethings are assembled and made to work on a novel machine, in an incredibly short time frame. One of the recurring themes in the book is, how these young engineers, despite working insane 60-80 hour weeks, found a lot of meaning in their work. Not everything is about money and stock options. It also made me the appreciate the enormous impact a strong and inspiring manager could have on his/her team. "
280,0316491977,http://goodreads.com/user/show/8699203-charlie-harrington,5,"Fantastic odyssey of bringing a new computer to life in the late 1970s. The metaphors and analogies for computer architecture are appropriate, approachable, and just plain awesome - I’ll be thinking about these explanations for a long time to come. Recommended for anyone who’s ever built anything with a computer and wants to go under the hood a bit deeper - no technical background required, but if you’ve got one, then you’ll dig this book even more. "
281,0316491977,http://goodreads.com/user/show/2875383-xavier-shay,4,"History of the build of a new computer - does a good job getting underneath what drives nerds, overwork/burnout, etc...""Transistors are superior. They are solid. They have no cogs and wheels, no separate pieces to be soldered together; it is as if they are stones performing useful work.""it seemed to me that computers have been used in ways that are salutary, in ways that are dangerous, banal and cruel, and in ways that seem harmless if a little silly. But what fun making them can be!""“That’s the bear trap, the greatest vice. Your job. You can justify just about any behavior with it. Maybe that’s why you do it, so you don’t have to deal with all those other problems.”"
282,0316491977,http://goodreads.com/user/show/48458018-i-d,4,Some times fascinating others dreadfully dull (the debugging part) but always a worthwhile read. If you want to know about the early days of PC construction or are curious how much/little has changed this is for you. Outdated in ways but still relevant in others. 
283,0316491977,http://goodreads.com/user/show/51881453-pratul-kalia,5,"If you enjoy computing history, this is a must read. A rollercoaster of exhilaration and poignancy, and a sample of extreme bias-for-action. Funny how it doesn't feel like the tech industry has changed much over the forty odd years this book has been in print."
284,0316491977,http://goodreads.com/user/show/35250595-andrew-barchuk,5,I think I kinda understand how CPU works now.
285,0316491977,http://goodreads.com/user/show/1036822-ken-nickerson,5,Brilliant!
286,0316491977,http://goodreads.com/user/show/20981906-tosca,4,Stay tuned for my eventual review in which I’ll discuss how the Data General playbook is still in use at today’s Silicon Valley tech companies.
287,0316491977,http://goodreads.com/user/show/81505727-jos-garc-a-urrutia,5,This book was a trip for me. As a software developer myself this seemed to me so familiar and fresh (even if it tells a history of about 40 years ago!). Technology has changed a lot but the people who built it is the same. I could feel the tension and excitement throughout the history!
288,0316491977,http://goodreads.com/user/show/39065232-alosh-bennett,5,"The last email for the day is sent. There are no more calls tonight. And you settle in, warming your bones beside the proverbial fire. Music now fills the room.The thrill is goneThe thrill is gone awayAs you take comfort in the king of blues, you reflect on your work, once your passion.After many years as a software engineer, one day you find that have ended up with a 'job'. Its hard to pin point when the fun went out of building things. If you find yourself agreeing to BB King, it would be a good time to pick up this book.Tracy Kidder takes you along on the fascinating journey of this team of engineers as they build The Eagle at Data General. The scene is familiar. An aggressive and brash company - a bastard in the world of IBMs. A young team set up with an impossible deadline, and oh did someone mention the survival of the company depends on the team delivering on time.The book is more that long hours and the sweat and grit. Kidder introduces you to the engineers, each unique in their on way and also so familair to someone you know from work. The book anchors around Tom West, the man of conviction, man of action. He's the phantom, the jesus reincarnated as bobcat. Nobody knows what he does, but at the end, when you look back you see his magic. The glue that binds all of it together.""Not everything worth doing is worth doing well"", says West. Of late, I am convinced that to build a great product, more than skill you need conviction that you can build a great project.Data General is a place where Mushroom Management is thriving (keep them in the dark, feed them bullshit). But you encounter some very real people in this book. You encounter the passion, the reason why builders build! I loved this book for that.""Look, I don't have to get official recognition for anything I do. Ninety-eight percent of the thrill comes from knowing that the thing you designed works, and works almost the way you expected it would. If that happens, part of you is in that machine.""At the end, it all comes down to a game of Pinball, says West. You win, you get to play again. You ship, you get to build again. That is what the people are in for. Thats the reason why we build. There are no morals, you take away what you want to. (There is plenty of wisdom though).I cant believe the book is as old as me. The team, the suitation, the people are still relevant. If you replace MUD with Quake2, this book could pass off for my generation. Maybe it can pass of the current generation too.The book took me down the memory lane, the good old days when coding was fun. When you lived by the motto ""I did it for the kicks"". Maybe its the nostalgia speaking, but everything looks better in old photographs. The book has been a great reminder for me, holding a mirror and asking ""are you having fun?""PS: This year 2000 article O, Engineers! that tracks down the engineers after 18 years of the Soul makes a fascinating after-read."
289,0316491977,http://goodreads.com/user/show/1888594-claire-s,5,"Read this book in that early 80's period, when I was pre-CSci at the U.. played a non-insignificant role in my deciding to switch careers. Not because I wasn't willing to work hard, but because the picture he painted was of very-realistic sounding imbalance. Long-term, structural imbalance and unwellness. And I knew myself well enough to know that that work environment wouldn't be in my best interest. I have - in accounting - worked long hours sometimes, as many as 60 hour weeks repeatedly; sometimes 22 days in a row of 5-8 hour days (5 hours being on the weekend days), etc.. but the most ever was close to 100 hours a week for a period, and that was at an ISP, during a pre-merger period when other staff had already left. And from that ISP, and other computer-industry workplaces I saw over the years, I always felt the validity of what Kidder wrote in this book.I still wish it could have been possible, I think it would have been a lot more interesting and rewarding (potentially), but I am glad not to have had those workplace pressures at that nature. So, in balance, very grateful to this book to have steered me away at that critical juncture."
290,0316491977,http://goodreads.com/user/show/5685608-john-jr,4,"Some comments in lieu of a review:Anyone interested in the characters presented in this remarkable, Pulitzer-winning book by Tracy Kidder should consider reading a follow-up published by Wired in 2000…Some more recent readers appear to have found the book ""dated"" in one way or another, a historical relic of the late 1970s. Granted, the products of computer technology have vastly changed. But the processes by which computer technology is developed may not have changed so much, if at all, and in any case have probably varied with time and context. Anyone lucky enough to get a job with Google nowadays won't find much in this book to remind them of work, but some smaller and/or hungrier companies still operated this way in the 90s, when I worked at a few, and surely some still do…"
291,0316491977,http://goodreads.com/user/show/5109654-marks54,4,"I read this book when I was starting grad school. It is an extraordinary story of an innovative team that developed a new 16 bit minicomputer at Data General, who was in competition with DEC and IBM at the time. The story is especially good for its examination of an innovative work team and is just as relevant today as it was then. The only problem, however, is that it is focused on companies that are no longer as relevant in the computer business (DEC and Data General) and on a product that has likely been surpassed in computer power by most smart phones. Top of the line laptops these days are 64 bit machines whose owners have to worry about how efficiently their computers run programs for 32 bit machines. 16 bit machines are museum pieces. The technology has moved on. The human story is still relevant, although Apple is a much sexier story for a firm these days."
292,0316491977,http://goodreads.com/user/show/1435375-hank-stuever,3,"At some point I burned out on Tracy Kidder's style of nonfiction, but there was a time 15-20 years ago, when, if you were a young journalist, every editor and or mentor-type person in your life would insist that you read Kidder's books -- ""House"" especially, and ""Among Schoolchildren"" and this one. I'm sure it's still instructive for those in search of narrative technique, also maybe how to make a the everyday into a compelling story. "
293,0316491977,http://goodreads.com/user/show/66452385-sherron,4,"I really liked this. I learned a lot about DEC and engineering processes within a high tech company. I had first listened to 
 House
 by  Tracy Kidder; I liked his style and wanted more, so I read this. I would still like to read more, but it's hard to find his stuff in online libraries these days."
294,0316491977,http://goodreads.com/user/show/74011437-ashutosh-narendra,4,"If you want to know, how few managers with their nagging solves big problems. Read it.A story set in Pre-PC Era shows us how managers were different from what we see today and how big organisations used to work. I love how the story is told, you can feel that you were there when everything was executed.Kudos Tracy Kidder"
295,0316491977,http://goodreads.com/user/show/30644056-michael-dubakov,5,"Somehow not so easy read. Not sure why. However, if you liked Zen and the Art of Motorcycle Maintenance by Robert Pirsig, you will like this book as well. The real story of Data General Eclipse MV/8000 computer design. Very detailed, deep and passionate. "
296,0316491977,http://goodreads.com/user/show/57956231-ailith-twinning,5,"This is just a really engaging story man, very fun read. And Tracy is one hell of a writer; if you don't care about computer engineering, I really don't see how that will matter. I read it just because the name sounded neat. That said - damn I hate Capitalism."
297,0316491977,http://goodreads.com/user/show/2787066-michael,2,The soul turns out to be unpaid overtimeA fine story sprinkled lightly with insight. I have no idea what the thesis would be other than nerds like building things and will maintain unhealthy work/life balance to do so if properly encouraged.
298,0316491977,http://goodreads.com/user/show/6607576-finlay,4,"Really interesting to read about the history of the industry, but also depressing to see all the same bullshit (schedule-chicken, resource battles, etc) that hasn't changed in 30 years. "
299,0316491977,http://goodreads.com/user/show/5783219-kobe-bryant,2,Its pretty funny how much of this book Halt and Catch Fire ripped off. Season 2 was pretty good though there was too much drama
